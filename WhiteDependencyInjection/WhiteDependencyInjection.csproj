<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <IsPackable>true</IsPackable>
        <Nullable>enable</Nullable>
        <LangVersion>latest</LangVersion>

        <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
        <IsRoslynComponent>true</IsRoslynComponent>
        <PackageId>WhiteDependencyInjection</PackageId>
        
        <AssemblyName>WhiteDependencyInjection</AssemblyName>
        <RootNamespace>WhiteDependencyInjection</RootNamespace>
        <Title>WhiteDI</Title>
        <Description>Dependency injection with source generators</Description>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <RepositoryUrl>git@github.com:Leviaweek/WhiteDependencyInjection.git</RepositoryUrl>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <Version>1.0.0</Version>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.3.0"/>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="4.3.0"/>
        <PackageReference Include="WhiteDependencyInjection.BaseTypes" Version="1.0.0" />
        <None Include="README.md" Pack="true" PackagePath="\"/>
    </ItemGroup>


</Project>
